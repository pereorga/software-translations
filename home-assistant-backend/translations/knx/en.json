{
    "config": {
        "error": {
            "cannot_connect": "Failed to connect",
            "invalid_backbone_key": "Invalid backbone key. 32 hexadecimal numbers expected.",
            "invalid_individual_address": "Value does not match pattern for KNX individual address.\n'area.line.device'",
            "invalid_ip_address": "Invalid IPv4 address.",
            "keyfile_invalid_signature": "The password to decrypt the `.knxkeys` file is wrong.",
            "keyfile_no_backbone_key": "The `.knxkeys` file does not contain a backbone key for secure routing.",
            "keyfile_no_tunnel_for_host": "The `.knxkeys` file does not contain credentials for host `{host}`.",
            "keyfile_not_found": "The specified `.knxkeys` file was not found in the path config/.storage/knx/",
            "no_router_discovered": "No KNXnet/IP router was discovered on the network.",
            "no_tunnel_discovered": "Could not find a KNX tunneling server on your network.",
            "unsupported_tunnel_type": "Selected tunnelling type not supported by gateway."
        },
        "step": {
            "connection_type": {
                "data": {
                    "connection_type": "KNX connection type"
                },
                "data_description": {
                    "connection_type": "Please select the connection type you want to use for your KNX connection."
                },
                "description": "'Automatic' performs a gateway scan on start, to find a KNX IP interface. It will connect via a tunnel. (Not available if a gateway scan was not successful.)\n\n'Tunneling' will connect to a specific KNX IP interface over a tunnel.\n\n'Routing' will use Multicast to communicate with KNX IP routers.",
                "title": "KNX connection"
            },
            "knxkeys_tunnel_select": {
                "data": {
                    "tunnel_endpoint_ia": "Select the tunnel endpoint used for the connection."
                },
                "data_description": {
                    "tunnel_endpoint_ia": "'Automatic' selects a free tunnel endpoint for you when connecting. If you're unsure, this is the best option."
                },
                "title": "Tunnel endpoint"
            },
            "manual_tunnel": {
                "data": {
                    "host": "Host",
                    "local_ip": "Local IP interface",
                    "port": "Port",
                    "route_back": "Route back / NAT mode",
                    "tunneling_type": "KNX tunneling type"
                },
                "data_description": {
                    "host": "IP address or hostname of the KNX/IP tunneling device.",
                    "local_ip": "Local IP or interface name used for the connection from Home Assistant. Leave blank to use auto-discovery.",
                    "port": "Port used by the KNX/IP tunneling device.",
                    "route_back": "Enable if your KNXnet/IP tunneling server is behind NAT. Only applies for UDP connections.",
                    "tunneling_type": "Select the tunneling type of your KNX/IP tunneling device. Older interfaces may only support `UDP`."
                },
                "description": "Please enter the connection information of your tunneling device.",
                "title": "Tunnel settings"
            },
            "routing": {
                "data": {
                    "individual_address": "Individual address",
                    "local_ip": "Local IP interface",
                    "multicast_group": "Multicast group",
                    "multicast_port": "Multicast port",
                    "routing_secure": "KNX IP Secure Routing"
                },
                "data_description": {
                    "individual_address": "KNX address to be used by Home Assistant, e.g. `0.0.4`",
                    "local_ip": "Local IP or interface name used for the connection from Home Assistant. Leave blank to use auto-discovery.",
                    "multicast_group": "Multicast group used by your installation. Default is `224.0.23.12`",
                    "multicast_port": "Multicast port used by your installation. Default is `3671`",
                    "routing_secure": "Select if your installation uses encrypted communication according to the KNX IP Secure standard. This setting requires compatible devices and configuration. You'll be prompted for credentials in the next step."
                },
                "description": "Please configure the routing options.",
                "title": "Routing"
            },
            "secure_key_source_menu_routing": {
                "description": "How do you want to configure KNX/IP Secure?",
                "menu_options": {
                    "secure_knxkeys": "Use a `.knxkeys` file providing IP Secure keys",
                    "secure_routing_manual": "Configure IP Secure backbone key manually"
                },
                "title": "KNX IP Secure"
            },
            "secure_key_source_menu_tunnel": {
                "description": "How do you want to configure KNX/IP Secure?",
                "menu_options": {
                    "secure_knxkeys": "Use a `.knxkeys` file providing IP Secure keys",
                    "secure_tunnel_manual": "Configure IP Secure credentials manually"
                },
                "title": "KNX IP Secure"
            },
            "secure_knxkeys": {
                "data": {
                    "knxkeys_file": "Keyring file",
                    "knxkeys_password": "Keyring password"
                },
                "data_description": {
                    "knxkeys_file": "Select a `.knxkeys` file. This can be exported from ETS.",
                    "knxkeys_password": "The password to open the `.knxkeys` file was set when exporting."
                },
                "description": "The Keyring is used to encrypt and decrypt KNX IP Secure communication.",
                "title": "Import KNX Keyring"
            },
            "secure_routing_manual": {
                "data": {
                    "backbone_key": "Backbone key",
                    "sync_latency_tolerance": "Network latency tolerance"
                },
                "data_description": {
                    "backbone_key": "Can be seen in the 'Security' report of your ETS project. Eg. `00112233445566778899AABBCCDDEEFF`",
                    "sync_latency_tolerance": "Should be equal to the backbone configuration of your ETS project. Default is `1000`"
                },
                "description": "Please enter your IP Secure information.",
                "title": "Secure routing"
            },
            "secure_tunnel_manual": {
                "data": {
                    "device_authentication": "Device authentication password",
                    "user_id": "User ID",
                    "user_password": "User password"
                },
                "data_description": {
                    "device_authentication": "This is set in the 'IP' panel of the interface in ETS.",
                    "user_id": "This usually is tunnel number +1. So first tunnel in the list presented in ETS would have User-ID `2`.",
                    "user_password": "Password for the specific tunnel connection set in the 'Properties' panel of the tunnel in ETS."
                },
                "description": "Please enter your IP Secure information.",
                "title": "Secure tunnelling"
            },
            "tcp_tunnel_endpoint": {
                "data": {
                    "tunnel_endpoint_ia": "Select the tunnel endpoint used for the connection."
                },
                "data_description": {
                    "tunnel_endpoint_ia": "'Automatic' selects a free tunnel endpoint for you when connecting. If you're unsure, this is the best option."
                },
                "title": "Tunnel endpoint"
            },
            "tunnel": {
                "data": {
                    "gateway": "Please select a gateway from the list."
                },
                "data_description": {
                    "gateway": "Select a KNX tunneling interface you want use for the connection."
                },
                "title": "Tunnel"
            }
        }
    },
    "device_automation": {
        "extra_fields": {
            "destination": "Group addresses",
            "group_value_read": "GroupValueRead",
            "group_value_response": "GroupValueResponse",
            "group_value_write": "GroupValueWrite",
            "incoming": "Incoming",
            "outgoing": "Outgoing"
        },
        "extra_fields_descriptions": {
            "destination": "The trigger will listen to telegrams sent or received on these group addresses. If no address is selected, the trigger will fire for every group address.",
            "group_value_read": "Listen on GroupValueRead telegrams.",
            "group_value_response": "Listen on GroupValueResponse telegrams.",
            "group_value_write": "Listen on GroupValueWrite telegrams.",
            "incoming": "Listen on incoming telegrams.",
            "outgoing": "Listen on outgoing telegrams."
        },
        "trigger_type": {
            "telegram": "Telegram"
        }
    },
    "entity": {
        "climate": {
            "knx_climate": {
                "state_attributes": {
                    "preset_mode": {
                        "name": "Preset",
                        "state": {
                            "auto": "Auto",
                            "building_protection": "Building protection",
                            "comfort": "Comfort",
                            "economy": "Eco",
                            "standby": "Standby"
                        }
                    }
                }
            }
        },
        "sensor": {
            "connected_since": {
                "name": "Connection established"
            },
            "connection_type": {
                "name": "Connection type"
            },
            "individual_address": {
                "name": "Individual address"
            },
            "telegram_count": {
                "name": "Telegrams",
                "unit_of_measurement": "telegrams"
            },
            "telegrams_incoming": {
                "name": "Incoming telegrams",
                "unit_of_measurement": "telegrams"
            },
            "telegrams_incoming_error": {
                "name": "Incoming telegram errors",
                "unit_of_measurement": "errors"
            },
            "telegrams_outgoing": {
                "name": "Outgoing telegrams",
                "unit_of_measurement": "telegrams"
            },
            "telegrams_outgoing_error": {
                "name": "Outgoing telegram errors",
                "unit_of_measurement": "errors"
            }
        }
    },
    "options": {
        "error": {
            "cannot_connect": "Failed to connect",
            "invalid_backbone_key": "Invalid backbone key. 32 hexadecimal numbers expected.",
            "invalid_individual_address": "Value does not match pattern for KNX individual address.\n'area.line.device'",
            "invalid_ip_address": "Invalid IPv4 address.",
            "keyfile_invalid_signature": "The password to decrypt the `.knxkeys` file is wrong.",
            "keyfile_no_backbone_key": "The `.knxkeys` file does not contain a backbone key for secure routing.",
            "keyfile_no_tunnel_for_host": "The `.knxkeys` file does not contain credentials for host `{host}`.",
            "keyfile_not_found": "The specified `.knxkeys` file was not found in the path config/.storage/knx/",
            "no_router_discovered": "No KNXnet/IP router was discovered on the network.",
            "no_tunnel_discovered": "Could not find a KNX tunneling server on your network.",
            "unsupported_tunnel_type": "Selected tunnelling type not supported by gateway."
        },
        "step": {
            "communication_settings": {
                "data": {
                    "rate_limit": "Rate limit",
                    "state_updater": "State updater",
                    "telegram_log_size": "Telegram history limit"
                },
                "data_description": {
                    "rate_limit": "Maximum outgoing telegrams per second.\n`0` to disable limit. Recommended: `0` or between `20` and `40`",
                    "state_updater": "Sets the default behavior for reading state addresses from the KNX Bus.\nWhen enabled, Home Assistant will monitor each group address and read it from the bus if no value has been received for one hour.\nWhen disabled, state addresses will only be read once after a bus connection is established.\nThis behavior can be overridden for individual entities using the `sync_state` option.",
                    "telegram_log_size": "Telegrams to keep in memory for KNX panel group monitor. Maximum: {telegram_log_size_max}"
                },
                "title": "Communication settings"
            },
            "connection_type": {
                "data": {
                    "connection_type": "KNX connection type"
                },
                "data_description": {
                    "connection_type": "Please select the connection type you want to use for your KNX connection."
                },
                "description": "'Automatic' performs a gateway scan on start, to find a KNX IP interface. It will connect via a tunnel. (Not available if a gateway scan was not successful.)\n\n'Tunneling' will connect to a specific KNX IP interface over a tunnel.\n\n'Routing' will use Multicast to communicate with KNX IP routers.",
                "title": "KNX connection"
            },
            "init": {
                "menu_options": {
                    "communication_settings": "Communication settings",
                    "connection_type": "Configure KNX interface",
                    "secure_knxkeys": "Import a `.knxkeys` file"
                },
                "title": "KNX Settings"
            },
            "knxkeys_tunnel_select": {
                "data": {
                    "tunnel_endpoint_ia": "Select the tunnel endpoint used for the connection."
                },
                "data_description": {
                    "tunnel_endpoint_ia": "'Automatic' selects a free tunnel endpoint for you when connecting. If you're unsure, this is the best option."
                },
                "title": "Tunnel endpoint"
            },
            "manual_tunnel": {
                "data": {
                    "host": "Host",
                    "local_ip": "Local IP interface",
                    "port": "Port",
                    "route_back": "Route back / NAT mode",
                    "tunneling_type": "KNX tunneling type"
                },
                "data_description": {
                    "host": "IP address or hostname of the KNX/IP tunneling device.",
                    "local_ip": "Local IP or interface name used for the connection from Home Assistant. Leave blank to use auto-discovery.",
                    "port": "Port used by the KNX/IP tunneling device.",
                    "route_back": "Enable if your KNXnet/IP tunneling server is behind NAT. Only applies for UDP connections.",
                    "tunneling_type": "Select the tunneling type of your KNX/IP tunneling device. Older interfaces may only support `UDP`."
                },
                "description": "Please enter the connection information of your tunneling device.",
                "title": "Tunnel settings"
            },
            "routing": {
                "data": {
                    "individual_address": "Individual address",
                    "local_ip": "Local IP interface",
                    "multicast_group": "Multicast group",
                    "multicast_port": "Multicast port",
                    "routing_secure": "KNX IP Secure Routing"
                },
                "data_description": {
                    "individual_address": "KNX address to be used by Home Assistant, e.g. `0.0.4`",
                    "local_ip": "Local IP or interface name used for the connection from Home Assistant. Leave blank to use auto-discovery.",
                    "multicast_group": "Multicast group used by your installation. Default is `224.0.23.12`",
                    "multicast_port": "Multicast port used by your installation. Default is `3671`",
                    "routing_secure": "Select if your installation uses encrypted communication according to the KNX IP Secure standard. This setting requires compatible devices and configuration. You'll be prompted for credentials in the next step."
                },
                "description": "Please configure the routing options.",
                "title": "Routing"
            },
            "secure_key_source_menu_routing": {
                "description": "How do you want to configure KNX/IP Secure?",
                "menu_options": {
                    "secure_knxkeys": "Use a `.knxkeys` file providing IP Secure keys",
                    "secure_routing_manual": "Configure IP Secure backbone key manually"
                },
                "title": "KNX IP Secure"
            },
            "secure_key_source_menu_tunnel": {
                "description": "How do you want to configure KNX/IP Secure?",
                "menu_options": {
                    "secure_knxkeys": "Use a `.knxkeys` file providing IP Secure keys",
                    "secure_tunnel_manual": "Configure IP Secure credentials manually"
                },
                "title": "KNX IP Secure"
            },
            "secure_knxkeys": {
                "data": {
                    "knxkeys_file": "Keyring file",
                    "knxkeys_password": "Keyring password"
                },
                "data_description": {
                    "knxkeys_file": "Select a `.knxkeys` file. This can be exported from ETS.",
                    "knxkeys_password": "The password to open the `.knxkeys` file was set when exporting."
                },
                "description": "The Keyring is used to encrypt and decrypt KNX IP Secure communication.",
                "title": "Import KNX Keyring"
            },
            "secure_routing_manual": {
                "data": {
                    "backbone_key": "Backbone key",
                    "sync_latency_tolerance": "Network latency tolerance"
                },
                "data_description": {
                    "backbone_key": "Can be seen in the 'Security' report of your ETS project. Eg. `00112233445566778899AABBCCDDEEFF`",
                    "sync_latency_tolerance": "Should be equal to the backbone configuration of your ETS project. Default is `1000`"
                },
                "description": "Please enter your IP Secure information.",
                "title": "Secure routing"
            },
            "secure_tunnel_manual": {
                "data": {
                    "device_authentication": "Device authentication password",
                    "user_id": "User ID",
                    "user_password": "User password"
                },
                "data_description": {
                    "device_authentication": "This is set in the 'IP' panel of the interface in ETS.",
                    "user_id": "This usually is tunnel number +1. So first tunnel in the list presented in ETS would have User-ID `2`.",
                    "user_password": "Password for the specific tunnel connection set in the 'Properties' panel of the tunnel in ETS."
                },
                "description": "Please enter your IP Secure information.",
                "title": "Secure tunnelling"
            },
            "tcp_tunnel_endpoint": {
                "data": {
                    "tunnel_endpoint_ia": "Select the tunnel endpoint used for the connection."
                },
                "data_description": {
                    "tunnel_endpoint_ia": "'Automatic' selects a free tunnel endpoint for you when connecting. If you're unsure, this is the best option."
                },
                "title": "Tunnel endpoint"
            },
            "tunnel": {
                "data": {
                    "gateway": "Please select a gateway from the list."
                },
                "data_description": {
                    "gateway": "Select a KNX tunneling interface you want use for the connection."
                },
                "title": "Tunnel"
            }
        }
    },
    "services": {
        "event_register": {
            "description": "Adds or removes group addresses to knx_event filter for triggering `knx_event`s. Only addresses added with this action can be removed.",
            "fields": {
                "address": {
                    "description": "Group address(es) that shall be added or removed. Lists are allowed.",
                    "name": "Group address"
                },
                "remove": {
                    "description": "If `True` the group address(es) will be removed.",
                    "name": "Remove event registration"
                },
                "type": {
                    "description": "If set, the payload will be decoded as given DPT in the event data `value` key. KNX sensor types are valid values (see https://www.home-assistant.io/integrations/knx/#value-types).",
                    "name": "Value type"
                }
            },
            "name": "Register knx_event"
        },
        "exposure_register": {
            "description": "Adds or removes exposures to KNX bus. Only exposures added with this action can be removed.",
            "fields": {
                "address": {
                    "description": "Group address state or attribute updates will be sent to. GroupValueRead requests will be answered. Per address only one exposure can be registered.",
                    "name": "Group address"
                },
                "attribute": {
                    "description": "Attribute of the entity that shall be sent to the KNX bus. If not set the state will be sent. Eg. for a light the state is eigther \u201con\u201d or \u201coff\u201d - with attribute you can expose its \u201cbrightness\u201d.",
                    "name": "Entity attribute"
                },
                "default": {
                    "description": "Default value to send to the bus if the state or attribute value is None. Eg. a light with state \u201coff\u201d has no brightness attribute so a default value of 0 could be used. If not set (or None) no value would be sent to the bus and a GroupReadRequest to the address would return the last known value.",
                    "name": "Default value"
                },
                "entity_id": {
                    "description": "Entity ID whose state or attribute shall be exposed.",
                    "name": "Entity"
                },
                "remove": {
                    "description": "If `True` the exposure will be removed. Only `address` is required for removal.",
                    "name": "Remove exposure"
                },
                "type": {
                    "description": "Telegrams will be encoded as given DPT. 'binary' and all KNX sensor types are valid values (see https://www.home-assistant.io/integrations/knx/#value-types).",
                    "name": "Value type"
                }
            },
            "name": "Expose to KNX bus"
        },
        "read": {
            "description": "Sends GroupValueRead requests to the KNX bus. Response can be used from `knx_event` and will be processed in KNX entities.",
            "fields": {
                "address": {
                    "description": "Group address(es) to send read request to. Lists will read multiple group addresses.",
                    "name": "Group address"
                }
            },
            "name": "Read from KNX bus"
        },
        "reload": {
            "description": "Reloads the KNX integration.",
            "name": "Reload"
        },
        "send": {
            "description": "Sends arbitrary data directly to the KNX bus.",
            "fields": {
                "address": {
                    "description": "Group address(es) to write to. Lists will send to multiple group addresses successively.",
                    "name": "Group address"
                },
                "payload": {
                    "description": "Payload to send to the bus. Integers are treated as DPT 1/2/3 payloads. For DPTs > 6 bits send a list. Each value represents 1 octet (0-255). Pad with 0 to DPT byte length.",
                    "name": "Payload"
                },
                "response": {
                    "description": "If set to `True`, the telegram will be sent as a `GroupValueResponse` instead of a `GroupValueWrite`.",
                    "name": "Send as Response"
                },
                "type": {
                    "description": "If set, the payload will not be sent as raw bytes, but encoded as given DPT. KNX sensor types are valid values (see https://www.home-assistant.io/integrations/knx/#value-types).",
                    "name": "Value type"
                }
            },
            "name": "Send to KNX bus"
        }
    }
}